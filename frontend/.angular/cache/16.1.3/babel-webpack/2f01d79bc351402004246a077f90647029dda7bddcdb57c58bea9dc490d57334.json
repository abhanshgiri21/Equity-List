{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TransactionDescriptionPipe {\n  transform(ledger) {\n    let transactionType = ledger.type;\n    let transactionDescription = '';\n    switch (transactionType) {\n      case 'DEPOSIT':\n        {\n          transactionDescription = `${ledger.method} Deposit${ledger.source['description'] ? ' from ' + ledger.source['description'] : ''}`;\n          break;\n        }\n      case 'INVESTMENT':\n        {\n          transactionDescription = `${ledger.destination['type']} Investment in ${ledger.destination['description']}`;\n          break;\n        }\n      case 'REFUND':\n        {\n          transactionDescription = `${ledger.destination['type']} Refund from ${ledger.destination['description']}`;\n          break;\n        }\n      case 'WITHDRAWAL':\n        {\n          transactionDescription = `${ledger.method} Withdrawl from ${ledger.destination['description']}`;\n          break;\n        }\n      case 'TRANSFER':\n        {\n          transactionDescription = ledger.amount >= 0 ? `Transfer from ${ledger.source['description']}` : `${ledger.destination['description']}`;\n          break;\n        }\n      default:\n        transactionDescription = ledger.type;\n    }\n    return transactionDescription;\n  }\n}\nTransactionDescriptionPipe.ɵfac = function TransactionDescriptionPipe_Factory(t) {\n  return new (t || TransactionDescriptionPipe)();\n};\nTransactionDescriptionPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"transactionDescription\",\n  type: TransactionDescriptionPipe,\n  pure: true\n});","map":{"version":3,"names":["TransactionDescriptionPipe","transform","ledger","transactionType","type","transactionDescription","method","source","destination","amount","pure"],"sources":["C:\\Users\\Tanishka\\Downloads\\EquityList Assignment\\equityListSubmission\\frontend\\src\\app\\pipes\\transaction-description.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'transactionDescription',\n})\nexport class TransactionDescriptionPipe implements PipeTransform {\n  transform(ledger: any): string {\n    let transactionType = ledger.type;\n    let transactionDescription = '';\n    switch (transactionType) {\n      case 'DEPOSIT': {\n        transactionDescription = `${ledger.method} Deposit${\n          ledger.source['description']\n            ? ' from ' + ledger.source['description']\n            : ''\n        }`;\n        break;\n      }\n      case 'INVESTMENT': {\n        transactionDescription = `${ledger.destination['type']} Investment in ${ledger.destination['description']}`;\n        break;\n      }\n      case 'REFUND': {\n        transactionDescription = `${ledger.destination['type']} Refund from ${ledger.destination['description']}`;\n        break;\n      }\n      case 'WITHDRAWAL': {\n        transactionDescription = `${ledger.method} Withdrawl from ${ledger.destination['description']}`;\n        break;\n      }\n      case 'TRANSFER': {\n        transactionDescription =\n          ledger.amount >= 0\n            ? `Transfer from ${ledger.source['description']}`\n            : `${ledger.destination['description']}`;\n        break;\n      }\n      default:\n        transactionDescription = ledger.type;\n    }\n\n    return transactionDescription;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,0BAA0B;EACrCC,SAASA,CAACC,MAAW;IACnB,IAAIC,eAAe,GAAGD,MAAM,CAACE,IAAI;IACjC,IAAIC,sBAAsB,GAAG,EAAE;IAC/B,QAAQF,eAAe;MACrB,KAAK,SAAS;QAAE;UACdE,sBAAsB,GAAG,GAAGH,MAAM,CAACI,MAAM,WACvCJ,MAAM,CAACK,MAAM,CAAC,aAAa,CAAC,GACxB,QAAQ,GAAGL,MAAM,CAACK,MAAM,CAAC,aAAa,CAAC,GACvC,EACN,EAAE;UACF;;MAEF,KAAK,YAAY;QAAE;UACjBF,sBAAsB,GAAG,GAAGH,MAAM,CAACM,WAAW,CAAC,MAAM,CAAC,kBAAkBN,MAAM,CAACM,WAAW,CAAC,aAAa,CAAC,EAAE;UAC3G;;MAEF,KAAK,QAAQ;QAAE;UACbH,sBAAsB,GAAG,GAAGH,MAAM,CAACM,WAAW,CAAC,MAAM,CAAC,gBAAgBN,MAAM,CAACM,WAAW,CAAC,aAAa,CAAC,EAAE;UACzG;;MAEF,KAAK,YAAY;QAAE;UACjBH,sBAAsB,GAAG,GAAGH,MAAM,CAACI,MAAM,mBAAmBJ,MAAM,CAACM,WAAW,CAAC,aAAa,CAAC,EAAE;UAC/F;;MAEF,KAAK,UAAU;QAAE;UACfH,sBAAsB,GACpBH,MAAM,CAACO,MAAM,IAAI,CAAC,GACd,iBAAiBP,MAAM,CAACK,MAAM,CAAC,aAAa,CAAC,EAAE,GAC/C,GAAGL,MAAM,CAACM,WAAW,CAAC,aAAa,CAAC,EAAE;UAC5C;;MAEF;QACEH,sBAAsB,GAAGH,MAAM,CAACE,IAAI;;IAGxC,OAAOC,sBAAsB;EAC/B;;AArCWL,0BAA0B,C;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B,C;;QAA1BA,0BAA0B;EAAAU,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}