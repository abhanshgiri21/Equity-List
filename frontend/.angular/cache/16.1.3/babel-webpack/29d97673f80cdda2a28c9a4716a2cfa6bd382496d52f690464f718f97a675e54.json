{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api-service.service\";\nimport * as i2 from \"@angular/common\";\nfunction LedgerEntryComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ledger_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r1.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r1.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r1.requester.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r1.amount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r1.balance);\n  }\n}\nexport class LedgerEntryComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.ledgers = [];\n    this.apiService = apiService;\n    this.getSimpleLedger();\n  }\n  getSimpleLedger() {\n    this.apiService.getSimpleLedger().subscribe(data => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n  getDuplicateLedger() {\n    this.apiService.getDuplicateLedger().subscribe(data => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n  getComplicatedLedger() {\n    this.apiService.getComplicatedLedger().subscribe(data => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n  filterLedgerData(data) {\n    data;\n  }\n}\nLedgerEntryComponent.ɵfac = function LedgerEntryComponent_Factory(t) {\n  return new (t || LedgerEntryComponent)(i0.ɵɵdirectiveInject(i1.ApiServiceService));\n};\nLedgerEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LedgerEntryComponent,\n  selectors: [[\"app-ledger-entry\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[1, \"small\"], [1, \"ledger-selector\"], [\"name\", \"ledger-selector\", \"id\", \"ledger-selector\", \"change\", \"(selectorChanged($event))\"], [3, \"value\"], [1, \"content\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function LedgerEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \" Your investing account ($0 available) \");\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtext(3, \"08/19/2014 - 10/15/2014\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"select\", 2)(6, \"option\", 3);\n      i0.ɵɵtext(7, \"Simple ledger\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"option\", 3);\n      i0.ɵɵtext(9, \"Duplicate Ledger\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"option\", 3);\n      i0.ɵɵtext(11, \"Complicated Ledger\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"table\")(14, \"thead\")(15, \"tr\")(16, \"th\");\n      i0.ɵɵtext(17, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Balance\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"tbody\");\n      i0.ɵɵtemplate(27, LedgerEntryComponent_tr_27_Template, 11, 5, \"tr\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"value\", ctx.simpleLedger);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.duplicateLedger);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.complicatedLedger);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ledgers);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"h1[_ngcontent-%COMP%] {\\n  font-size: 2em;\\n  font-weight: 300;\\n  margin: 1em 0;\\n  text-align: center;\\n}\\n\\nh1[_ngcontent-%COMP%]    > .small[_ngcontent-%COMP%] {\\n  font-size: 0.5em;\\n  font-weight: 300;\\n  color: #999;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n  width: 800px;\\n  margin: auto;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.ledger-selector[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  width: 100%;\\n  align-items: center;\\n  &.select {\\n    align-items: center;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGVkZ2VyLWVudHJ5L2xlZGdlci1lbnRyeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2Isa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkI7SUFDRSxtQkFBbUI7RUFDckI7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcclxuICBmb250LXNpemU6IDJlbTtcclxuICBmb250LXdlaWdodDogMzAwO1xyXG4gIG1hcmdpbjogMWVtIDA7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5oMSA+IC5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiAwLjVlbTtcclxuICBmb250LXdlaWdodDogMzAwO1xyXG4gIGNvbG9yOiAjOTk5O1xyXG59XHJcblxyXG4uY29udGVudCB7XHJcbiAgd2lkdGg6IDgwMHB4O1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubGVkZ2VyLXNlbGVjdG9yIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgJi5zZWxlY3Qge1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ledger_r1","date","type","requester","amount","balance","LedgerEntryComponent","constructor","apiService","ledgers","getSimpleLedger","subscribe","data","console","log","getDuplicateLedger","getComplicatedLedger","filterLedgerData","ɵɵdirectiveInject","i1","ApiServiceService","selectors","decls","vars","consts","template","LedgerEntryComponent_Template","rf","ctx","ɵɵtemplate","LedgerEntryComponent_tr_27_Template","ɵɵproperty","simpleLedger","duplicateLedger","complicatedLedger"],"sources":["C:\\Users\\Tanishka\\Downloads\\EquityList Assignment\\equityListSubmission\\frontend\\src\\app\\ledger-entry\\ledger-entry.component.ts","C:\\Users\\Tanishka\\Downloads\\EquityList Assignment\\equityListSubmission\\frontend\\src\\app\\ledger-entry\\ledger-entry.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiServiceService } from '../services/api-service.service';\n\n@Component({\n  selector: 'app-ledger-entry',\n  templateUrl: './ledger-entry.component.html',\n  styleUrls: ['./ledger-entry.component.css'],\n})\nexport class LedgerEntryComponent {\n  ledgers: any = [];\n  constructor(public apiService: ApiServiceService) {\n    this.apiService = apiService;\n    this.getSimpleLedger();\n  }\n\n  getSimpleLedger() {\n    this.apiService.getSimpleLedger().subscribe((data: any) => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n\n  getDuplicateLedger() {\n    this.apiService.getDuplicateLedger().subscribe((data: any) => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n\n  getComplicatedLedger() {\n    this.apiService.getComplicatedLedger().subscribe((data: any) => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n\n  filterLedgerData(data: any) {\n    data;\n  }\n}\n","<h1>\n  Your investing account ($0 available)\n  <div class=\"small\">08/19/2014 - 10/15/2014</div>\n</h1>\n\n<div class=\"ledger-selector\">\n  <select\n    name=\"ledger-selector\"\n    id=\"ledger-selector\"\n    change=\"(selectorChanged($event))\"\n  >\n    <option [value]=\"simpleLedger\">Simple ledger</option>\n    <option [value]=\"duplicateLedger\">Duplicate Ledger</option>\n    <option [value]=\"complicatedLedger\">Complicated Ledger</option>\n  </select>\n</div>\n\n<div class=\"content\">\n  <table>\n    <thead>\n      <tr>\n        <th>Date</th>\n        <th>Type</th>\n        <th>Description</th>\n        <th>Amount</th>\n        <th>Balance</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <!-- Table code goes here -->\n      <tr *ngFor=\"let ledger of ledgers\">\n        <th>{{ ledger.date }}</th>\n        <th>{{ ledger.type }}</th>\n        <th>{{ ledger.requester.type }}</th>\n        <th>{{ ledger.amount }}</th>\n        <th>{{ ledger.balance }}</th>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}