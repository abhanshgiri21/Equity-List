{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiServiceService {\n  constructor(http) {\n    this.http = http;\n    this.domain = 'http://localhost:3000/';\n    this.simpleLedgerPath = `${this.domain}simpleLedger`;\n    this.duplicateLedgerPath = `${this.domain}duplicateLedger`;\n    this.complicatedLedgerPath = `${this.domain}complicatedLedger`;\n  }\n  get(url, options) {\n    return this.http.get(url, options);\n  }\n  getSimpleLedger() {\n    return this.get(this.simpleLedgerPath);\n  }\n  getDuplicateLedger() {\n    return this.get(this.duplicateLedgerPath);\n  }\n  getComplicatedLedger() {\n    return this.get(this.complicatedLedgerPath);\n  }\n}\nApiServiceService.ɵfac = function ApiServiceService_Factory(t) {\n  return new (t || ApiServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiServiceService,\n  factory: ApiServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiServiceService","constructor","http","domain","simpleLedgerPath","duplicateLedgerPath","complicatedLedgerPath","get","url","options","getSimpleLedger","getDuplicateLedger","getComplicatedLedger","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Tanishka\\Downloads\\EquityList Assignment\\equityListProject\\frontend\\src\\app\\services\\api-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceService {\n  constructor(private http: HttpClient) {}\n\n  domain = 'http://localhost:3000/';\n  simpleLedgerPath = `${this.domain}simpleLedger`;\n  duplicateLedgerPath = `${this.domain}duplicateLedger`;\n  complicatedLedgerPath = `${this.domain}complicatedLedger`;\n\n  public get(url: string, options?: any) {\n    return this.http.get(url, options);\n  }\n\n  public getSimpleLedger() {\n    return this.get(this.simpleLedgerPath);\n  }\n\n  public getDuplicateLedger() {\n    return this.get(this.duplicateLedgerPath);\n  }\n\n  public getComplicatedLedger() {\n    return this.get(this.complicatedLedgerPath);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAC5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,MAAM,GAAG,wBAAwB;IACjC,KAAAC,gBAAgB,GAAG,GAAG,IAAI,CAACD,MAAM,cAAc;IAC/C,KAAAE,mBAAmB,GAAG,GAAG,IAAI,CAACF,MAAM,iBAAiB;IACrD,KAAAG,qBAAqB,GAAG,GAAG,IAAI,CAACH,MAAM,mBAAmB;EALlB;EAOhCI,GAAGA,CAACC,GAAW,EAAEC,OAAa;IACnC,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAACC,GAAG,EAAEC,OAAO,CAAC;EACpC;EAEOC,eAAeA,CAAA;IACpB,OAAO,IAAI,CAACH,GAAG,CAAC,IAAI,CAACH,gBAAgB,CAAC;EACxC;EAEOO,kBAAkBA,CAAA;IACvB,OAAO,IAAI,CAACJ,GAAG,CAAC,IAAI,CAACF,mBAAmB,CAAC;EAC3C;EAEOO,oBAAoBA,CAAA;IACzB,OAAO,IAAI,CAACL,GAAG,CAAC,IAAI,CAACD,qBAAqB,CAAC;EAC7C;;AAtBWN,iBAAiB,C;mBAAjBA,iBAAiB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAjBhB,iBAAiB,C;SAAjBA,iBAAiB;EAAAiB,OAAA,EAAjBjB,iBAAiB,CAAAkB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}