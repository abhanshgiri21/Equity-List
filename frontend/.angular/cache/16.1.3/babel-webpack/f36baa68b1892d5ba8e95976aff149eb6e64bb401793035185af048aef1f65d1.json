{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TransactionDescriptionPipe {\n  transform(ledger) {\n    console.log('ledger to pipe is : ', ledger);\n    console.log('ledger type: ', ledger.type);\n    let transactionType = ledger.type;\n    let transactionDescription = '';\n    switch (transactionType) {\n      case 'DEPOSIT':\n        {\n          transactionDescription = `${ledger.method} Deposit${ledger.source['description'] ? ' from ' + ledger.source['description'] : ''}`;\n          break;\n        }\n      case 'INVESTMENT':\n        {\n          transactionDescription = `${ledger.desctination['type']} Investment in ${ledger.desctination['description']}`;\n          break;\n        }\n      case 'REFUND':\n        {\n          transactionDescription = `${ledger.desctination['type']} Refund from ${ledger.desctination['description']}`;\n          break;\n        }\n      case 'WITHDRAWAL':\n        {\n          transactionDescription = `${ledger.method} Withdrawl from ${ledger.destination['description']}`;\n          break;\n        }\n      case 'TRANSFER' && ledger.amount >= 0:\n        {\n          transactionDescription = `Transfer from ${ledger.source['description']}`;\n          break;\n        }\n      case 'TRANSFER' && ledger.amount < 0:\n        {\n          transactionDescription = `${ledger.destination['description']}`;\n          break;\n        }\n      default:\n        transactionDescription = ledger.type;\n    }\n    return transactionDescription;\n  }\n}\nTransactionDescriptionPipe.ɵfac = function TransactionDescriptionPipe_Factory(t) {\n  return new (t || TransactionDescriptionPipe)();\n};\nTransactionDescriptionPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"transactionDescription\",\n  type: TransactionDescriptionPipe,\n  pure: true\n});","map":{"version":3,"names":["TransactionDescriptionPipe","transform","ledger","console","log","type","transactionType","transactionDescription","method","source","desctination","destination","amount","pure"],"sources":["C:\\Users\\Tanishka\\Downloads\\EquityList Assignment\\equityListSubmission\\frontend\\src\\app\\pipes\\transaction-description.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'transactionDescription',\n})\nexport class TransactionDescriptionPipe implements PipeTransform {\n  transform(ledger: any): string {\n    console.log('ledger to pipe is : ', ledger);\n    console.log('ledger type: ', ledger.type);\n    let transactionType = ledger.type;\n    let transactionDescription = '';\n    switch (transactionType) {\n      case 'DEPOSIT': {\n        transactionDescription = `${ledger.method} Deposit${\n          ledger.source['description']\n            ? ' from ' + ledger.source['description']\n            : ''\n        }`;\n        break;\n      }\n      case 'INVESTMENT': {\n        transactionDescription = `${ledger.desctination['type']} Investment in ${ledger.desctination['description']}`;\n        break;\n      }\n      case 'REFUND': {\n        transactionDescription = `${ledger.desctination['type']} Refund from ${ledger.desctination['description']}`;\n        break;\n      }\n      case 'WITHDRAWAL': {\n        transactionDescription = `${ledger.method} Withdrawl from ${ledger.destination['description']}`;\n        break;\n      }\n      case 'TRANSFER' && ledger.amount >= 0: {\n        transactionDescription = `Transfer from ${ledger.source['description']}`;\n        break;\n      }\n      case 'TRANSFER' && ledger.amount < 0: {\n        transactionDescription = `${ledger.destination['description']}`;\n        break;\n      }\n      default:\n        transactionDescription = ledger.type;\n    }\n\n    return transactionDescription;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,0BAA0B;EACrCC,SAASA,CAACC,MAAW;IACnBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAACG,IAAI,CAAC;IACzC,IAAIC,eAAe,GAAGJ,MAAM,CAACG,IAAI;IACjC,IAAIE,sBAAsB,GAAG,EAAE;IAC/B,QAAQD,eAAe;MACrB,KAAK,SAAS;QAAE;UACdC,sBAAsB,GAAG,GAAGL,MAAM,CAACM,MAAM,WACvCN,MAAM,CAACO,MAAM,CAAC,aAAa,CAAC,GACxB,QAAQ,GAAGP,MAAM,CAACO,MAAM,CAAC,aAAa,CAAC,GACvC,EACN,EAAE;UACF;;MAEF,KAAK,YAAY;QAAE;UACjBF,sBAAsB,GAAG,GAAGL,MAAM,CAACQ,YAAY,CAAC,MAAM,CAAC,kBAAkBR,MAAM,CAACQ,YAAY,CAAC,aAAa,CAAC,EAAE;UAC7G;;MAEF,KAAK,QAAQ;QAAE;UACbH,sBAAsB,GAAG,GAAGL,MAAM,CAACQ,YAAY,CAAC,MAAM,CAAC,gBAAgBR,MAAM,CAACQ,YAAY,CAAC,aAAa,CAAC,EAAE;UAC3G;;MAEF,KAAK,YAAY;QAAE;UACjBH,sBAAsB,GAAG,GAAGL,MAAM,CAACM,MAAM,mBAAmBN,MAAM,CAACS,WAAW,CAAC,aAAa,CAAC,EAAE;UAC/F;;MAEF,KAAK,UAAU,IAAIT,MAAM,CAACU,MAAM,IAAI,CAAC;QAAE;UACrCL,sBAAsB,GAAG,iBAAiBL,MAAM,CAACO,MAAM,CAAC,aAAa,CAAC,EAAE;UACxE;;MAEF,KAAK,UAAU,IAAIP,MAAM,CAACU,MAAM,GAAG,CAAC;QAAE;UACpCL,sBAAsB,GAAG,GAAGL,MAAM,CAACS,WAAW,CAAC,aAAa,CAAC,EAAE;UAC/D;;MAEF;QACEJ,sBAAsB,GAAGL,MAAM,CAACG,IAAI;;IAGxC,OAAOE,sBAAsB;EAC/B;;AAxCWP,0BAA0B,C;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B,C;;QAA1BA,0BAA0B;EAAAa,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}