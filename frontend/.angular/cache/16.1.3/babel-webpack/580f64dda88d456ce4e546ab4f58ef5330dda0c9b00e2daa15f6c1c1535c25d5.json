{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api-service.service\";\nimport * as i2 from \"@angular/common\";\nfunction LedgerEntryComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const v_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", v_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(v_r2.name);\n  }\n}\nfunction LedgerEntryComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ledger_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r3.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r3.requester.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r3.amount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ledger_r3.balance);\n  }\n}\nexport class LedgerEntryComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.ledgers = [];\n    this.ledgerValues = [{\n      id: 'simpleLedger',\n      name: 'Simple Ledger'\n    }, {\n      id: 'duplicateLedger',\n      name: 'Duplicate Ledger'\n    }, {\n      id: 'complicatedLedger',\n      name: 'Complicated Ledger'\n    }];\n    this.apiService = apiService;\n    this.getSimpleLedger();\n  }\n  selectorChanged(event) {\n    const ledgerType = event.target.value;\n    switch (ledgerType) {\n      case 'simpleLedger':\n        this.getSimpleLedger();\n        break;\n      case 'duplicateLedger':\n        this.getDuplicateLedger();\n        break;\n      case 'complicatedLedger':\n        this.getComplicatedLedger();\n        break;\n    }\n  }\n  getSimpleLedger() {\n    this.apiService.getSimpleLedger().subscribe(data => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n  getDuplicateLedger() {\n    this.apiService.getDuplicateLedger().subscribe(data => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n  getComplicatedLedger() {\n    this.apiService.getComplicatedLedger().subscribe(data => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n  filterLedgerData(data) {\n    data;\n  }\n}\nLedgerEntryComponent.ɵfac = function LedgerEntryComponent_Factory(t) {\n  return new (t || LedgerEntryComponent)(i0.ɵɵdirectiveInject(i1.ApiServiceService));\n};\nLedgerEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LedgerEntryComponent,\n  selectors: [[\"app-ledger-entry\"]],\n  decls: 23,\n  vars: 2,\n  consts: [[1, \"small\"], [1, \"ledger-selector\"], [\"name\", \"ledger-selector\", \"id\", \"ledger-selector\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"content\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function LedgerEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \" Your investing account ($0 available) \");\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtext(3, \"08/19/2014 - 10/15/2014\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"select\", 2);\n      i0.ɵɵlistener(\"change\", function LedgerEntryComponent_Template_select_change_5_listener($event) {\n        return ctx.selectorChanged($event);\n      });\n      i0.ɵɵtemplate(6, LedgerEntryComponent_option_6_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"table\")(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Balance\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, LedgerEntryComponent_tr_22_Template, 11, 5, \"tr\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ledgerValues);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ledgers);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"h1[_ngcontent-%COMP%] {\\n  font-size: 2em;\\n  font-weight: 300;\\n  margin: 1em 0;\\n  text-align: center;\\n}\\n\\nh1[_ngcontent-%COMP%]    > .small[_ngcontent-%COMP%] {\\n  font-size: 0.5em;\\n  font-weight: 300;\\n  color: #999;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n  width: 800px;\\n  margin: auto;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.ledger-selector[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  width: 100%;\\n  align-items: center;\\n  &.select {\\n    align-items: center;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGVkZ2VyLWVudHJ5L2xlZGdlci1lbnRyeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2Isa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkI7SUFDRSxtQkFBbUI7RUFDckI7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcclxuICBmb250LXNpemU6IDJlbTtcclxuICBmb250LXdlaWdodDogMzAwO1xyXG4gIG1hcmdpbjogMWVtIDA7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5oMSA+IC5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiAwLjVlbTtcclxuICBmb250LXdlaWdodDogMzAwO1xyXG4gIGNvbG9yOiAjOTk5O1xyXG59XHJcblxyXG4uY29udGVudCB7XHJcbiAgd2lkdGg6IDgwMHB4O1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubGVkZ2VyLXNlbGVjdG9yIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgJi5zZWxlY3Qge1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","v_r2","id","ɵɵadvance","ɵɵtextInterpolate","name","ledger_r3","date","type","requester","amount","balance","LedgerEntryComponent","constructor","apiService","ledgers","ledgerValues","getSimpleLedger","selectorChanged","event","ledgerType","target","value","getDuplicateLedger","getComplicatedLedger","subscribe","data","console","log","filterLedgerData","ɵɵdirectiveInject","i1","ApiServiceService","selectors","decls","vars","consts","template","LedgerEntryComponent_Template","rf","ctx","ɵɵlistener","LedgerEntryComponent_Template_select_change_5_listener","$event","ɵɵtemplate","LedgerEntryComponent_option_6_Template","LedgerEntryComponent_tr_22_Template"],"sources":["C:\\Users\\Tanishka\\Downloads\\EquityList Assignment\\equityListSubmission\\frontend\\src\\app\\ledger-entry\\ledger-entry.component.ts","C:\\Users\\Tanishka\\Downloads\\EquityList Assignment\\equityListSubmission\\frontend\\src\\app\\ledger-entry\\ledger-entry.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiServiceService } from '../services/api-service.service';\n\n@Component({\n  selector: 'app-ledger-entry',\n  templateUrl: './ledger-entry.component.html',\n  styleUrls: ['./ledger-entry.component.css'],\n})\nexport class LedgerEntryComponent {\n  ledgers: any = [];\n  ledgerValues = [\n    { id: 'simpleLedger', name: 'Simple Ledger' },\n    { id: 'duplicateLedger', name: 'Duplicate Ledger' },\n    { id: 'complicatedLedger', name: 'Complicated Ledger' },\n  ];\n  constructor(public apiService: ApiServiceService) {\n    this.apiService = apiService;\n    this.getSimpleLedger();\n  }\n\n  selectorChanged(event: any) {\n    const ledgerType = event.target.value;\n    switch (ledgerType) {\n      case 'simpleLedger':\n        this.getSimpleLedger();\n        break;\n      case 'duplicateLedger':\n        this.getDuplicateLedger();\n        break;\n      case 'complicatedLedger':\n        this.getComplicatedLedger();\n        break;\n    }\n  }\n\n  getSimpleLedger() {\n    this.apiService.getSimpleLedger().subscribe((data: any) => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n\n  getDuplicateLedger() {\n    this.apiService.getDuplicateLedger().subscribe((data: any) => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n\n  getComplicatedLedger() {\n    this.apiService.getComplicatedLedger().subscribe((data: any) => {\n      console.log('called api');\n      console.log(data);\n      this.ledgers = data;\n    });\n  }\n\n  filterLedgerData(data: any) {\n    data;\n  }\n}\n","<h1>\n  Your investing account ($0 available)\n  <div class=\"small\">08/19/2014 - 10/15/2014</div>\n</h1>\n\n<div class=\"ledger-selector\">\n  <select\n    name=\"ledger-selector\"\n    id=\"ledger-selector\"\n    (change)=\"selectorChanged($event)\"\n  >\n    <option *ngFor=\"let v of ledgerValues\" [value]=\"v.id\">{{ v.name }}</option>\n  </select>\n</div>\n\n<div class=\"content\">\n  <table>\n    <thead>\n      <tr>\n        <th>Date</th>\n        <th>Type</th>\n        <th>Description</th>\n        <th>Amount</th>\n        <th>Balance</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <!-- Table code goes here -->\n      <tr *ngFor=\"let ledger of ledgers\">\n        <th>{{ ledger.date }}</th>\n        <th>{{ ledger.type }}</th>\n        <th>{{ ledger.requester.type }}</th>\n        <th>{{ ledger.amount }}</th>\n        <th>{{ ledger.balance }}</th>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}